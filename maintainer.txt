Kernel maintainers - what they do, want, etc...


Last year, 3000 developers and 373 companies contributed to the kernel, the largest software project ever.

Here's the picture of how things work, 3000 developers, 700 maintainers, 130 subsystem maintainers.

5.xx changes a year

7.xx changes last release!

I've given lots of talks over the years about how to become a developer,
how to get involved, and what to do.  But what about those 700
maintainers?  What do they do?  What are they looking for when you send
them a patch?

Push/pull.  Every patch you send a maintainer increases their workload,
testing, support, and responsibility.  We review and accept thousands of
patches every year, keeping that rate of change going.


Make it impossible for me to reject your patch.

 - proper coding style
 - checkpatch.pl clean
 - proper people and mailing lists cc:ed (get_maintainer.pl)
 - proper subject
 - small incremental change
 - "obviously" correct
 - good description of WHY the patch is needed
 - tell me which tree it was made against if there is any question
 - if multiple patches:
 	- tell me the ordering
	- each patch needs to build properly and not break the build at any
	  step along the way
 - make sure it applies, with no fuzz.
 - make sure it builds
 - make sure it works, if possible.


What you should expect of a maintainerr
  - respond to the patch in 1-2 weeks (longer if in middle of merge
    window, or if at conferences.)
  - offer constructuve criticism of the patch
  - let the author know when the apply the patch, and where it can be found

What the author should provide
  - respond to feedback, don't ignore it
  - don't submit and run away
  - 


Why I guarantee to you:
	- I will respond within a week, unless I am traveling or during the merge window
	- I will email you when the patch goes into my trees, letting you know where it is at


What I do:
	- batch up subsystem patches
	- pick a few, save in a mbox
	- review them, if bad, let the author know why and how to fix it, if possible.
	- edit the headers to fix up typos
	- make sure they apply with 'patch -p1 --dry-run'
	- apply to a branch, building after each patch is applied
	- if all good, merge to my main branch, and send out emails that the patches are applied.


All my scripts are public:
	github /linux tree
